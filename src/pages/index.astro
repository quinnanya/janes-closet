---
import Head from "../components/Head.astro";
import { memes } from "../dataset.mjs";

import sizeOf from "image-size";

const getAspectRatio = (imgPath) => {
  const dimensions = sizeOf(imgPath);
  return dimensions.width / dimensions.height;
};

const title = "Memes";

memes.forEach((meme) => {
  meme.mediaAspectRatio = getAspectRatio(meme.mediaPath);
});
---

<html lang="en">
  <Head {title} />
  <body>
    <header>
      <h1>SUCHO Memes Gallery</h1>
    </header>
    <main id="gallery" class="zoomwall">
      {memes.map((meme, idx) => (
        <div>
          { (idx < 20) ?
            <img
              src={Astro.site.pathname + meme.mediaPath}
              style={`aspect-ratio: ${meme.mediaAspectRatio}`}
            />
            :
            <img
              data-src={Astro.site.pathname + meme.mediaPath}
              style={`aspect-ratio: ${meme.mediaAspectRatio}`}
            />
          }
          <section>
            <dl>
              <dt>Title:</dt>
              <dd>{meme.title}</dd>
              <dt>Translation:</dt>
              <dd>{meme.textTranslatedIntoEnglish}</dd>
            </dl>
          </section>
        </div>
      ))}
    </main>
  </body>
</html>

<script type="module" hoist>
  import ZoomWall from "../lib/zoomwall.js";
  const zoomwall = new ZoomWall(gallery);

  window.onload = () => {
    const gallery = document.getElementById("gallery");
    const images = gallery.querySelectorAll("[data-src]");

    const imageObserver = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const image = entry.target;
            image.src = image.dataset.src;
            image.removeAttribute("data-src");
            imageObserver.unobserve(image);
          }
        });
      },
      { root: gallery, rootMargin: "0px 0px 100% 0px" },
    );

    images.forEach((image) => imageObserver.observe(image));
  };
</script>

<style>
  body {
    background-color: #333;
    color: white;
    display: flex;
    flex-direction: column;
    font-family: sans-serif;
    height: 100vh;
    margin: 0;
    overflow: hidden;
    padding: 0;
  }

  header {
    display: flex;
    padding: 0.25em 1em;
    border-top: 5px solid #777;
    border-bottom: 5px solid #777;

    h1 {
      margin: 0;
      font-variant-caps: petite-caps;
      font-weight: 300;
    }
  }

  #gallery {
    font-size: 0;
    overflow-x: hidden;
    overflow-y: scroll;

    div {
      display: inline;
    }
    img {
      height: 15vmax;
      opacity: 1;
      transform-origin: 0% 0%;
      transition-duration: 0.3s;
      transition-property: transform, opacity;
      transition-timing-function: ease-out;
      vertical-align: top;
      width: auto;
    }

    section {
      display: none;
      background: rgba(0, 0, 0, 0.8);
      bottom: 0;
      color: white;
      font-size: large;
      padding: 0 1em;
      position: absolute;
      width: 100%;
      z-index: 2;

      dl {
        display: grid;
        grid-template-columns: 80px 1fr;
      }
    }

    &.lightbox {
      img {
        opacity: 0.3;
        transition-timing-function: ease-in;

        &.active {
          opacity: 1;

          & + section {
            display: block;
          }
        }
      }
    }
  }
</style>
