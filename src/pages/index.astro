---
import { renderPicture } from "astro-imagetools/api";

import { submissionFormUrl } from "../config.mjs";

import Head from "../components/Head.astro";
import Loader from "../components/Loader.astro";
import Filter from "../components/Filter.astro";
import Icon from "../components/Icon.astro";
import { memes } from "../dataset.mjs";

import "@fontsource/alex-brush/400.css";
import suchoLogo32x32 from "../img/sucho-logo.32x32.png";
import suchoLogo64x64 from "../img/sucho-logo.64x64.png";
import dressicon from "../img/dress-hanger.png";

// Given a <picture/> element as am HTML string (as returned by renderPicture),
// extract the srcset attribute values and return an object of the form
// { <ext>: <srcset>, ... }
const getSrcsetFromPicture = (picture) =>
  Object.fromEntries(
    [...picture.matchAll(/srcset="(?<s>[^"]*?)"/g)].map((s) => [
      s[1].match(/(?<=\.)[^\s.]+(?=\s|$)/)[0],
      s.groups.s,
    ]),
  );

const title = "Jane's closet";
const description =
  "Images of clothes from the Stanford Theater & Performance Studies Historic Collection";
---
<html lang="en">
  <Head {title} {description} />
  <body>
    <header>
      <h1>
        <img srcset={`${suchoLogo64x64} 2x`} src={suchoLogo32x32} alt="Jane's Closet" />
        <a href={Astro.site.pathname} title="Jane's Closet"
          >Jane's Closet
        </a>
      </h1>
      <div class="controls">
        <span class="count">{memes.length} / {memes.length}</span>
        <!--Filter
          title="Filter"
          selectClass="memeType"
          placeHolder="-- Filter by Content --"
          facet="memeTypes"></Filter-->
        <div class="search">
          <button class="search" title="Search"
            ><Icon name="search" />
          </button>
          <input id="search-input" type="text" />
          <label for="search-input" class="visually-hidden">Search Term</label>
        </div>
        <button class="show-filters" title="Show Filters"
          ><Icon name="filter" />
        </button>
        <button class="shuffle" title="Shuffle"
          ><Icon name="shuffle" />
        </button>
        <a class="button" title="About" href="/about/">
          <Icon name="info-circle" />
        </a>
      </div>
	  	  
	  
      <div class="more-filters">
        <Filter
          title="Filter by Gender"
          selectClass="gender"
          placeHolder="-- Gender --"
          facet="gender"></Filter>
        <Filter
          title="Filter by ID"
          selectClass="id"
          placeHolder="-- ID --"
          facet="id"></Filter>
        <Filter
          title="Filter by Type"
          selectClass="type"
          placeHolder="-- Type --"
          facet="type"></Filter>
        <Filter
          title="Filter by Date range"
          selectClass="dateRange"
          placeHolder="-- Date Range --"
          facet="dateRange"></Filter>
      </div>
    </header>
    <main id="meme-wall" class="loading">
      {memes.map(async (meme, idx) => {
        const { picture } = await renderPicture({
          src: "/src/../closet_media/" + meme.filename,
          fallbackFormat: "jpeg",
          format: "webp",
          alt: meme.notes,
          placeholder: "none",
          includeSourceFormat: false,
        })
        const srcsets = getSrcsetFromPicture(picture)


        return (
          <picture
            data-meme-type={meme.type.join("|")}
            data-gender={meme.gender.join("|")}
            data-id={meme.id.join("|")}
            data-dateRange={meme.dateRange.join("|")}
            data-yearListed-type={meme.yearListed.join("|")}>
            <source srcset={srcsets.webp} type="image/webp" sizes="15vmax" />
            <img
              data-src={srcsets.jpg}
              style={`aspect-ratio: ${meme.aspectRatio};background-image: url(${dressicon})`}
              loading={idx > 20 ? "lazy" : "eager"}
              decoding="async"
              alt={meme.id}
              sizes="15vmax"
            />
            <dl>
              <dt>Type</dt>
              <dd>{meme.type || "---"}</dd>
              <dt>Gender</dt>
              <dd>{meme.gender || "---"}</dd>
              <dt>ID</dt>
              <dd>{meme.id || "---"}</dd>
              <dt>Date Range</dt>
              <dd>{meme.dateRange || "---"}</dd>
              <dt>Year Listed</dt>
              <dd>{meme.yearListed || "---"}</dd>
            </dl>
          </picture>
        )
      })}
    </main>
    <Loader />
    <script type="module" hoist>
      import "../js/script.js";
    </script>
  </body>
</html>
<style is:global>
  @import "../styles/shared.css";
  @import "../styles/wall.css";
</style>
